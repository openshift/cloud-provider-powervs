name: Kube Update

on:
  schedule:
    - cron: "0 12 * * *" # Run at 12:00 UTC daily
  workflow_dispatch: # Allow manual triggering

jobs:
  download-kube-files:
    name: Download Kube files
    runs-on: ubuntu-latest
    steps:
      - name: Create shared directory
        run: mkdir shared-files

      - name: Download Kubernetes releases
        run: curl -L --fail --retry 10 --retry-all-errors --retry-delay 60 --retry-max-time 3600 -o shared-files/kube-releases.txt https://api.github.com/repos/kubernetes/kubernetes/releases

      - name: Download Kubernetes tags
        run: curl -L --fail --retry 10 --retry-all-errors --retry-delay 60 --retry-max-time 3600 -o shared-files/kube-tags.txt https://api.github.com/repos/kubernetes/kubernetes/tags

      - name: Upload both files as one artifact
        uses: actions/upload-artifact@v4
        with:
          name: shared-files
          path: shared-files/

  kube-update:
    needs: download-kube-files
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        branch: [release-1.31, release-1.32, release-1.33, release-1.34]
    steps:
      - name: Set up Git config
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Checkout branch ${{ matrix.branch }}
        uses: actions/checkout@v5
        with:
          ref: ${{ matrix.branch }}

      - name: Download shared-files artifact into /tmp
        uses: actions/download-artifact@v5
        with:
          name: shared-files
          path: /tmp

      - name: Determine current Kubernetes version for ${{ matrix.branch }}
        id: cur-k8s-ver
        run: |
          version=$(grep '^TAG ' Makefile | awk '{ print $3 }')
          echo "version=$version"
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: Run kube update script for ${{ matrix.branch }}
        run: .github/scripts/kube-update.sh

      - name: Determine new Kubernetes version for ${{ matrix.branch }}
        id: new-k8s-ver
        run: |
          version=$(grep '^TAG ' Makefile | awk '{ print $3 }')
          echo "version=$version"
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: No update needed for ${{ matrix.branch }}
        if: steps.cur-k8s-ver.outputs.version == steps.new-k8s-ver.outputs.version
        run: |
          echo "No update needed"

      - name: Commit changes
        if: steps.cur-k8s-ver.outputs.version != steps.new-k8s-ver.outputs.version
        id: commit-change
        run: |
          commit_msg="Bump branch ${{ matrix.branch }} from ${{ steps.cur-k8s-ver.outputs.version }} to ${{ steps.new-k8s-ver.outputs.version }}"
          echo "msg=$commit_msg" >> "$GITHUB_OUTPUT"
          git add -A
          git commit -m "$commit_msg"

      - name: Create pull request
        if: steps.cur-k8s-ver.outputs.version != steps.new-k8s-ver.outputs.version
        uses: peter-evans/create-pull-request@v7
        with:
          title: ${{ steps.commit-change.outputs.msg }}
          body: |
            If you do not see:

              âœ… Tests completed successfully

            Check the PR results [here](https://github.com/IBM-Cloud/cloud-provider-ibm/actions/workflows/dispatch-pr-create.yml)
          commit-message: ${{ steps.commit-change.outputs.msg }}
          branch: ${{ steps.new-k8s-ver.outputs.version }}
          base: ${{ matrix.branch }}
          labels: |
            kube-update
            ${{ matrix.branch }}
          delete-branch: true

      - name: Trigger downstream workflow
        if: steps.cur-k8s-ver.outputs.version != steps.new-k8s-ver.outputs.version
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: pull-request-created
          client-payload: |
            {
              "pr_branch": "${{ steps.new-k8s-ver.outputs.version }}",
              "pr_title": "${{ steps.commit-change.outputs.msg }}"
            }
