name: Gatekeeper

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch: # Allow manual triggering

jobs:
  gatekeeper:
    runs-on: ubuntu-latest
    permissions:
      checks: read

    steps:
      - name: Wait for all other workflows
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            // ✅ Works for PRs from forks and same repo
            const sha = context.payload.pull_request
              ? context.payload.pull_request.head.sha
              : context.sha;

            const maxAttempts = 20;
            const delayMs = 30000; // 30 seconds

            let allDone = false;
            let attempts = 0;

            await new Promise(r => setTimeout(r, 10000)); // Wait 10 sec before the first check
            while (!allDone && attempts < maxAttempts) {
              const { data: { check_runs } } = await github.rest.checks.listForRef({ owner, repo, ref: sha });

              allDone = true;
              const inProgress = [];

              for (const c of check_runs) {
                if (c.name.includes("gatekeeper")) continue; // skip self

                if (c.status !== 'completed') {
                  allDone = false;
                  inProgress.push(c.name);
                } else if (['failure','cancelled','timed_out','action_required'].includes(c.conclusion)) {
                  core.setFailed(`❌ ${c.name} failed. PR cannot be merged.`);
                  return;
                }
              }

              if (!allDone) {
                console.log(`⏳ Waiting for ${inProgress.length} checks to finish: ${inProgress.join(', ')}. Retrying in 30s...`);
                await new Promise(r => setTimeout(r, delayMs));
                attempts++;
              }
            }

            if (!allDone) {
              core.setFailed("⏰ Timeout waiting for workflows to complete.");
            } else {
              console.log("✅ All workflows completed successfully.");
            }
