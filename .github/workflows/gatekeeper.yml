name: Gatekeeper

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch: # Allow manual triggering

jobs:
  gatekeeper:
    runs-on: ubuntu-latest
    permissions:
      checks: write       # needed to create a check-run
      pull-requests: read
      actions: read

    steps:
      - name: Wait for all other workflows
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            // ‚úÖ Works for PRs from forks and same repo
            const sha = context.payload.pull_request
              ? context.payload.pull_request.head.sha
              : context.sha;

            // Get workflow runs for this commit
            const runs = await github.rest.actions.listWorkflowRunsForCommit({
              owner,
              repo,
              commit_sha: sha,
            });

            // Map check_suite_id -> workflow name
            const suiteToWorkflow = {};
            runs.data.workflow_runs.forEach(run => {
              suiteToWorkflow[run.check_suite_id] = run.name;
            });

            let allDone = false;
            let attempts = 0;
            let summary = "| Workflow | Check | Status | Conclusion |\n|----------|-------|--------|------------|\n";

            while (!allDone && attempts < 20) {
              const checks = await github.rest.checks.listForRef({
                owner,
                repo,
                ref: sha,
              });

              allDone = true;
              summary = "| Workflow | Check | Status | Conclusion |\n|----------|-------|--------|------------|\n";

              for (const c of checks.data.check_runs) {
                if (c.name.includes("gatekeeper")) continue; // skip self

                const workflowName = suiteToWorkflow[c.check_suite.id] || "UnknownWorkflow";
                summary += `| ${workflowName} | ${c.name} | ${c.status} | ${c.conclusion || ""} |\n`;

                // üö® Fail immediately if a workflow failed
                if (c.status === "completed" && ["failure", "cancelled", "timed_out", "action_required"].includes(c.conclusion)) {
                  await github.rest.checks.create({
                    owner,
                    repo,
                    name: "Gatekeeper",
                    head_sha: sha,
                    status: "completed",
                    conclusion: "failure",
                    output: {
                      title: "Gatekeeper Check",
                      summary: "One or more workflows failed.\n\n" + summary,
                    },
                  });
                  core.setFailed(`‚ùå ${workflowName} / ${c.name} failed`);
                  return;
                }

                // If not completed, keep waiting
                if (c.status !== "completed") {
                  allDone = false;
                }
              }

              if (!allDone) {
                console.log("‚è≥ Some checks still in progress. Retrying in 30s...");
                await new Promise(r => setTimeout(r, 30000));
                attempts++;
              }
            }

            if (!allDone) {
              await github.rest.checks.create({
                owner,
                repo,
                name: "Gatekeeper",
                head_sha: sha,
                status: "completed",
                conclusion: "failure",
                output: {
                  title: "Gatekeeper Check",
                  summary: "‚è∞ Timeout waiting for workflows to finish.\n\n" + summary,
                },
              });
              core.setFailed("‚è∞ Timeout waiting for all workflows to complete.");
            } else {
              await github.rest.checks.create({
                owner,
                repo,
                name: "Gatekeeper",
                head_sha: sha,
                status: "completed",
                conclusion: "success",
                output: {
                  title: "Gatekeeper Check",
                  summary: "‚úÖ All workflows passed.\n\n" + summary,
                },
              });
              console.log("‚úÖ All workflows completed successfully.");
            }
